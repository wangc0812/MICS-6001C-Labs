

================================================================
== Vitis HLS Report for 'real_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT'
================================================================
* Date:           Sat Sep 28 22:24:45 2024

* Version:        2024.1 (Build 5069499 on May 21 2024)
* Project:        build_hls
* Solution:       hls (Vitis Kernel Flow Target)
* Product family: virtexuplus
* Target device:  xcu250-figd2104-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  8.00 ns|  2.487 ns|     0.96 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+-------+-----------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |    Interval   |                    Pipeline                   |
    |   min   |   max   |    min   |    max   |  min  |  max  |                      Type                     |
    +---------+---------+----------+----------+-------+-------+-----------------------------------------------+
    |    20004|    20004|  0.160 ms|  0.160 ms|  20001|  20001|  loop auto-rewind stp(delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-------+-------+-----------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                                   |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |             Loop Name             |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +-----------------------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- MAT_C_ROWS_INIT_MAT_C_COLS_INIT  |    20002|    20002|         4|          1|          1|  20000|       yes|
        +-----------------------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.48>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%j = alloca i32 1" [src/real_matmul.cpp:50]   --->   Operation 7 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [src/real_matmul.cpp:48]   --->   Operation 8 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%indvar_flatten14 = alloca i32 1"   --->   Operation 9 'alloca' 'indvar_flatten14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.38ns)   --->   "%store_ln0 = store i15 0, i15 %indvar_flatten14"   --->   Operation 10 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 11 [1/1] (0.38ns)   --->   "%store_ln48 = store i7 0, i7 %i" [src/real_matmul.cpp:48]   --->   Operation 11 'store' 'store_ln48' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 12 [1/1] (0.38ns)   --->   "%store_ln50 = store i8 0, i8 %j" [src/real_matmul.cpp:50]   --->   Operation 12 'store' 'store_ln50' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc52"   --->   Operation 13 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%indvar_flatten14_load = load i15 %indvar_flatten14" [src/real_matmul.cpp:48]   --->   Operation 14 'load' 'indvar_flatten14_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.77ns)   --->   "%icmp_ln48 = icmp_eq  i15 %indvar_flatten14_load, i15 20000" [src/real_matmul.cpp:48]   --->   Operation 15 'icmp' 'icmp_ln48' <Predicate = true> <Delay = 0.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.77ns)   --->   "%add_ln48_1 = add i15 %indvar_flatten14_load, i15 1" [src/real_matmul.cpp:48]   --->   Operation 16 'add' 'add_ln48_1' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%br_ln48 = br i1 %icmp_ln48, void %for.inc55, void %INNER_ROW_COL.preheader.exitStub" [src/real_matmul.cpp:48]   --->   Operation 17 'br' 'br_ln48' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%j_load = load i8 %j" [src/real_matmul.cpp:50]   --->   Operation 18 'load' 'j_load' <Predicate = (!icmp_ln48)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%i_load = load i7 %i" [src/real_matmul.cpp:48]   --->   Operation 19 'load' 'i_load' <Predicate = (!icmp_ln48)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.70ns)   --->   "%add_ln48 = add i7 %i_load, i7 1" [src/real_matmul.cpp:48]   --->   Operation 20 'add' 'add_ln48' <Predicate = (!icmp_ln48)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.70ns)   --->   "%icmp_ln50 = icmp_eq  i8 %j_load, i8 200" [src/real_matmul.cpp:50]   --->   Operation 21 'icmp' 'icmp_ln50' <Predicate = (!icmp_ln48)> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.30ns)   --->   "%select_ln48 = select i1 %icmp_ln50, i8 0, i8 %j_load" [src/real_matmul.cpp:48]   --->   Operation 22 'select' 'select_ln48' <Predicate = (!icmp_ln48)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.30ns)   --->   "%select_ln48_1 = select i1 %icmp_ln50, i7 %add_ln48, i7 %i_load" [src/real_matmul.cpp:48]   --->   Operation 23 'select' 'select_ln48_1' <Predicate = (!icmp_ln48)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln51 = zext i7 %select_ln48_1" [src/real_matmul.cpp:51]   --->   Operation 24 'zext' 'zext_ln51' <Predicate = (!icmp_ln48)> <Delay = 0.00>
ST_1 : Operation 25 [3/3] (0.99ns) (grouped into DSP with root node add_ln51)   --->   "%mul_ln51 = mul i15 %zext_ln51, i15 200" [src/real_matmul.cpp:51]   --->   Operation 25 'mul' 'mul_ln51' <Predicate = (!icmp_ln48)> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 26 [1/1] (0.70ns)   --->   "%add_ln50 = add i8 %select_ln48, i8 1" [src/real_matmul.cpp:50]   --->   Operation 26 'add' 'add_ln50' <Predicate = (!icmp_ln48)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.38ns)   --->   "%store_ln48 = store i15 %add_ln48_1, i15 %indvar_flatten14" [src/real_matmul.cpp:48]   --->   Operation 27 'store' 'store_ln48' <Predicate = (!icmp_ln48)> <Delay = 0.38>
ST_1 : Operation 28 [1/1] (0.38ns)   --->   "%store_ln48 = store i7 %select_ln48_1, i7 %i" [src/real_matmul.cpp:48]   --->   Operation 28 'store' 'store_ln48' <Predicate = (!icmp_ln48)> <Delay = 0.38>
ST_1 : Operation 29 [1/1] (0.38ns)   --->   "%store_ln50 = store i8 %add_ln50, i8 %j" [src/real_matmul.cpp:50]   --->   Operation 29 'store' 'store_ln50' <Predicate = (!icmp_ln48)> <Delay = 0.38>

State 2 <SV = 1> <Delay = 0.99>
ST_2 : Operation 30 [2/3] (0.99ns) (grouped into DSP with root node add_ln51)   --->   "%mul_ln51 = mul i15 %zext_ln51, i15 200" [src/real_matmul.cpp:51]   --->   Operation 30 'mul' 'mul_ln51' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 3 <SV = 2> <Delay = 0.64>
ST_3 : Operation 31 [1/3] (0.00ns) (grouped into DSP with root node add_ln51)   --->   "%mul_ln51 = mul i15 %zext_ln51, i15 200" [src/real_matmul.cpp:51]   --->   Operation 31 'mul' 'mul_ln51' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln51_1 = zext i8 %select_ln48" [src/real_matmul.cpp:51]   --->   Operation 32 'zext' 'zext_ln51_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [2/2] (0.64ns) (root node of the DSP)   --->   "%add_ln51 = add i15 %mul_ln51, i15 %zext_ln51_1" [src/real_matmul.cpp:51]   --->   Operation 33 'add' 'add_ln51' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 42 [1/1] (0.38ns)   --->   "%ret_ln0 = ret"   --->   Operation 42 'ret' 'ret_ln0' <Predicate = (icmp_ln48)> <Delay = 0.38>

State 4 <SV = 3> <Delay = 1.89>
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @MAT_C_ROWS_INIT_MAT_C_COLS_INIT_str"   --->   Operation 34 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 20000, i64 20000, i64 20000"   --->   Operation 35 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 36 [1/2] (0.64ns) (root node of the DSP)   --->   "%add_ln51 = add i15 %mul_ln51, i15 %zext_ln51_1" [src/real_matmul.cpp:51]   --->   Operation 36 'add' 'add_ln51' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln51_2 = zext i15 %add_ln51" [src/real_matmul.cpp:51]   --->   Operation 37 'zext' 'zext_ln51_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%MatC_addr = getelementptr i16 %MatC, i64 0, i64 %zext_ln51_2" [src/real_matmul.cpp:51]   --->   Operation 38 'getelementptr' 'MatC_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%specpipeline_ln50 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_1" [src/real_matmul.cpp:50]   --->   Operation 39 'specpipeline' 'specpipeline_ln50' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (1.24ns)   --->   "%store_ln51 = store i16 0, i15 %MatC_addr" [src/real_matmul.cpp:51]   --->   Operation 40 'store' 'store_ln51' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 20000> <RAM>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%br_ln50 = br void %for.inc52" [src/real_matmul.cpp:50]   --->   Operation 41 'br' 'br_ln50' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8.000ns, clock uncertainty: 0.960ns.

 <State 1>: 2.487ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln50', src/real_matmul.cpp:50) of constant 0 on local variable 'j', src/real_matmul.cpp:50 [7]  (0.387 ns)
	'load' operation 8 bit ('j_load', src/real_matmul.cpp:50) on local variable 'j', src/real_matmul.cpp:50 [15]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln50', src/real_matmul.cpp:50) [20]  (0.705 ns)
	'select' operation 8 bit ('select_ln48', src/real_matmul.cpp:48) [21]  (0.303 ns)
	'add' operation 8 bit ('add_ln50', src/real_matmul.cpp:50) [31]  (0.705 ns)
	'store' operation 0 bit ('store_ln50', src/real_matmul.cpp:50) of variable 'add_ln50', src/real_matmul.cpp:50 on local variable 'j', src/real_matmul.cpp:50 [34]  (0.387 ns)

 <State 2>: 0.996ns
The critical path consists of the following:
	'mul' operation 15 bit of DSP[26] ('mul_ln51', src/real_matmul.cpp:51) [24]  (0.996 ns)

 <State 3>: 0.645ns
The critical path consists of the following:
	'mul' operation 15 bit of DSP[26] ('mul_ln51', src/real_matmul.cpp:51) [24]  (0.000 ns)
	'add' operation 15 bit of DSP[26] ('add_ln51', src/real_matmul.cpp:51) [26]  (0.645 ns)

 <State 4>: 1.893ns
The critical path consists of the following:
	'add' operation 15 bit of DSP[26] ('add_ln51', src/real_matmul.cpp:51) [26]  (0.645 ns)
	'getelementptr' operation 15 bit ('MatC_addr', src/real_matmul.cpp:51) [28]  (0.000 ns)
	'store' operation 0 bit ('store_ln51', src/real_matmul.cpp:51) of constant 0 on array 'MatC' [30]  (1.248 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
