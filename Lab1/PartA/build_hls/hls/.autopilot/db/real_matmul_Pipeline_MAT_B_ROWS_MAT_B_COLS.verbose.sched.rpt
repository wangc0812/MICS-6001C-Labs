

================================================================
== Vitis HLS Report for 'real_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS'
================================================================
* Date:           Sat Sep 28 22:24:45 2024

* Version:        2024.1 (Build 5069499 on May 21 2024)
* Project:        build_hls
* Solution:       hls (Vitis Kernel Flow Target)
* Product family: virtexuplus
* Target device:  xcu250-figd2104-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  8.00 ns|  7.040 ns|     0.96 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+-------+-----------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |    Interval   |                    Pipeline                   |
    |   min   |   max   |    min   |    max   |  min  |  max  |                      Type                     |
    +---------+---------+----------+----------+-------+-------+-----------------------------------------------+
    |    30003|    30003|  0.240 ms|  0.240 ms|  30001|  30001|  loop auto-rewind stp(delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-------+-------+-----------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                         |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |        Loop Name        |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +-------------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- MAT_B_ROWS_MAT_B_COLS  |    30001|    30001|         3|          1|          1|  30000|       yes|
        +-------------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.48>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%shiftreg353 = alloca i32 1"   --->   Operation 6 'alloca' 'shiftreg353' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%j = alloca i32 1" [src/real_matmul.cpp:38]   --->   Operation 7 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [src/real_matmul.cpp:36]   --->   Operation 8 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%indvar_flatten7 = alloca i32 1"   --->   Operation 9 'alloca' 'indvar_flatten7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%sext_ln36_read = read i60 @_ssdm_op_Read.ap_auto.i60, i60 %sext_ln36"   --->   Operation 10 'read' 'sext_ln36_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%sext_ln36_cast = sext i60 %sext_ln36_read"   --->   Operation 11 'sext' 'sext_ln36_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i128 %mem, void @empty_0, i32 0, i32 0, void @empty_1, i32 64, i32 1, void @empty_2, void @empty_9, void @empty_1, i32 16, i32 16, i32 16, i32 16, void @empty_1, void @empty_1, i32 4294967295, i32 0, i32 0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.38ns)   --->   "%store_ln0 = store i15 0, i15 %indvar_flatten7"   --->   Operation 13 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 14 [1/1] (0.38ns)   --->   "%store_ln36 = store i8 0, i8 %i" [src/real_matmul.cpp:36]   --->   Operation 14 'store' 'store_ln36' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 15 [1/1] (0.38ns)   --->   "%store_ln38 = store i8 0, i8 %j" [src/real_matmul.cpp:38]   --->   Operation 15 'store' 'store_ln38' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 16 [1/1] (0.38ns)   --->   "%store_ln0 = store i112 0, i112 %shiftreg353"   --->   Operation 16 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc32"   --->   Operation 17 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%indvar_flatten7_load = load i15 %indvar_flatten7" [src/real_matmul.cpp:36]   --->   Operation 18 'load' 'indvar_flatten7_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i128 %mem"   --->   Operation 19 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.77ns)   --->   "%icmp_ln36 = icmp_eq  i15 %indvar_flatten7_load, i15 30000" [src/real_matmul.cpp:36]   --->   Operation 20 'icmp' 'icmp_ln36' <Predicate = true> <Delay = 0.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.77ns)   --->   "%add_ln36_1 = add i15 %indvar_flatten7_load, i15 1" [src/real_matmul.cpp:36]   --->   Operation 21 'add' 'add_ln36_1' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%br_ln36 = br i1 %icmp_ln36, void %for.inc35, void %for.inc52.preheader.exitStub" [src/real_matmul.cpp:36]   --->   Operation 22 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%j_load = load i8 %j" [src/real_matmul.cpp:38]   --->   Operation 23 'load' 'j_load' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.70ns)   --->   "%icmp_ln38 = icmp_eq  i8 %j_load, i8 200" [src/real_matmul.cpp:38]   --->   Operation 24 'icmp' 'icmp_ln38' <Predicate = (!icmp_ln36)> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.30ns)   --->   "%select_ln36 = select i1 %icmp_ln38, i8 0, i8 %j_load" [src/real_matmul.cpp:36]   --->   Operation 25 'select' 'select_ln36' <Predicate = (!icmp_ln36)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%trunc_ln38 = trunc i8 %select_ln36" [src/real_matmul.cpp:38]   --->   Operation 26 'trunc' 'trunc_ln38' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.57ns)   --->   "%icmp_ln39 = icmp_eq  i3 %trunc_ln38, i3 0" [src/real_matmul.cpp:39]   --->   Operation 27 'icmp' 'icmp_ln39' <Predicate = (!icmp_ln36)> <Delay = 0.57> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.70ns)   --->   "%add_ln38 = add i8 %select_ln36, i8 1" [src/real_matmul.cpp:38]   --->   Operation 28 'add' 'add_ln38' <Predicate = (!icmp_ln36)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.38ns)   --->   "%store_ln36 = store i15 %add_ln36_1, i15 %indvar_flatten7" [src/real_matmul.cpp:36]   --->   Operation 29 'store' 'store_ln36' <Predicate = (!icmp_ln36)> <Delay = 0.38>
ST_1 : Operation 30 [1/1] (0.38ns)   --->   "%store_ln38 = store i8 %add_ln38, i8 %j" [src/real_matmul.cpp:38]   --->   Operation 30 'store' 'store_ln38' <Predicate = (!icmp_ln36)> <Delay = 0.38>

State 2 <SV = 1> <Delay = 7.04>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%mem_addr = getelementptr i128 %mem, i64 %sext_ln36_cast" [src/real_matmul.cpp:36]   --->   Operation 31 'getelementptr' 'mem_addr' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (7.04ns)   --->   "%mem_addr_read = read i128 @_ssdm_op_Read.m_axi.p1i128, i128 %mem_addr" [src/real_matmul.cpp:39]   --->   Operation 32 'read' 'mem_addr_read' <Predicate = (!icmp_ln36 & icmp_ln39)> <Delay = 7.04> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 61 [1/1] (0.38ns)   --->   "%ret_ln0 = ret"   --->   Operation 61 'ret' 'ret_ln0' <Predicate = (icmp_ln36)> <Delay = 0.38>

State 3 <SV = 2> <Delay = 3.05>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%shiftreg353_load = load i112 %shiftreg353" [src/real_matmul.cpp:36]   --->   Operation 33 'load' 'shiftreg353_load' <Predicate = (!icmp_ln36 & !icmp_ln38)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%i_load = load i8 %i" [src/real_matmul.cpp:36]   --->   Operation 34 'load' 'i_load' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.70ns)   --->   "%add_ln36 = add i8 %i_load, i8 1" [src/real_matmul.cpp:36]   --->   Operation 35 'add' 'add_ln36' <Predicate = (!icmp_ln36 & icmp_ln38)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @MAT_B_ROWS_MAT_B_COLS_str"   --->   Operation 36 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 30000, i64 30000, i64 30000"   --->   Operation 37 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.34ns)   --->   "%select_ln36_1 = select i1 %icmp_ln38, i112 0, i112 %shiftreg353_load" [src/real_matmul.cpp:36]   --->   Operation 38 'select' 'select_ln36_1' <Predicate = (!icmp_ln36)> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.30ns)   --->   "%select_ln36_2 = select i1 %icmp_ln38, i8 %add_ln36, i8 %i_load" [src/real_matmul.cpp:36]   --->   Operation 39 'select' 'select_ln36_2' <Predicate = (!icmp_ln36)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i12 @_ssdm_op_BitConcatenate.i12.i8.i4, i8 %select_ln36_2, i4 0" [src/real_matmul.cpp:36]   --->   Operation 40 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln38 = zext i112 %select_ln36_1" [src/real_matmul.cpp:38]   --->   Operation 41 'zext' 'zext_ln38' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln38_1 = zext i8 %select_ln36" [src/real_matmul.cpp:38]   --->   Operation 42 'zext' 'zext_ln38_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%specpipeline_ln38 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_1" [src/real_matmul.cpp:38]   --->   Operation 43 'specpipeline' 'specpipeline_ln38' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%MatB_addr = getelementptr i2400 %MatB, i64 0, i64 %zext_ln38_1" [src/real_matmul.cpp:39]   --->   Operation 44 'getelementptr' 'MatB_addr' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.38ns)   --->   "%br_ln39 = br i1 %icmp_ln39, void %for.inc32.split._crit_edge, void" [src/real_matmul.cpp:39]   --->   Operation 45 'br' 'br_ln39' <Predicate = (!icmp_ln36)> <Delay = 0.38>
ST_3 : Operation 46 [1/1] (0.38ns)   --->   "%br_ln39 = br void %for.inc32.split._crit_edge" [src/real_matmul.cpp:39]   --->   Operation 46 'br' 'br_ln39' <Predicate = (!icmp_ln36 & icmp_ln39)> <Delay = 0.38>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%empty = phi i128 %mem_addr_read, void, i128 %zext_ln38, void %for.inc35" [src/real_matmul.cpp:39]   --->   Operation 47 'phi' 'empty' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%trunc_ln39 = trunc i128 %empty" [src/real_matmul.cpp:39]   --->   Operation 48 'trunc' 'trunc_ln39' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%trunc_ln39_1 = partselect i112 @_ssdm_op_PartSelect.i112.i128.i32.i32, i128 %empty, i32 16, i32 127" [src/real_matmul.cpp:39]   --->   Operation 49 'partselect' 'trunc_ln39_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln39 = zext i12 %tmp_s" [src/real_matmul.cpp:39]   --->   Operation 50 'zext' 'zext_ln39' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln39_1 = zext i16 %trunc_ln39" [src/real_matmul.cpp:39]   --->   Operation 51 'zext' 'zext_ln39_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.84ns)   --->   "%shl_ln39 = shl i2400 %zext_ln39_1, i2400 %zext_ln39" [src/real_matmul.cpp:39]   --->   Operation 52 'shl' 'shl_ln39' <Predicate = true> <Delay = 0.84> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%specbramwithbyteenable_ln39 = specbramwithbyteenable void @_ssdm_op_SpecBRAMWithByteEnable, i2400 %MatB" [src/real_matmul.cpp:39]   --->   Operation 53 'specbramwithbyteenable' 'specbramwithbyteenable_ln39' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i8.i1, i8 %select_ln36_2, i1 0" [src/real_matmul.cpp:39]   --->   Operation 54 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln39_2 = zext i9 %tmp" [src/real_matmul.cpp:39]   --->   Operation 55 'zext' 'zext_ln39_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.72ns)   --->   "%shl_ln39_1 = shl i300 3, i300 %zext_ln39_2" [src/real_matmul.cpp:39]   --->   Operation 56 'shl' 'shl_ln39_1' <Predicate = true> <Delay = 0.72> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 57 [1/1] (1.20ns)   --->   "%store_ln39 = store void @_ssdm_op_Write.bram.i2400, i8 %MatB_addr, i2400 %shl_ln39, i300 %shl_ln39_1" [src/real_matmul.cpp:39]   --->   Operation 57 'store' 'store_ln39' <Predicate = true> <Delay = 1.20> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2400> <Depth = 200> <RAM>
ST_3 : Operation 58 [1/1] (0.38ns)   --->   "%store_ln36 = store i8 %select_ln36_2, i8 %i" [src/real_matmul.cpp:36]   --->   Operation 58 'store' 'store_ln36' <Predicate = true> <Delay = 0.38>
ST_3 : Operation 59 [1/1] (0.38ns)   --->   "%store_ln39 = store i112 %trunc_ln39_1, i112 %shiftreg353" [src/real_matmul.cpp:39]   --->   Operation 59 'store' 'store_ln39' <Predicate = true> <Delay = 0.38>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%br_ln38 = br void %for.inc32" [src/real_matmul.cpp:38]   --->   Operation 60 'br' 'br_ln38' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8.000ns, clock uncertainty: 0.960ns.

 <State 1>: 2.487ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln38', src/real_matmul.cpp:38) of constant 0 on local variable 'j', src/real_matmul.cpp:38 [13]  (0.387 ns)
	'load' operation 8 bit ('j_load', src/real_matmul.cpp:38) on local variable 'j', src/real_matmul.cpp:38 [24]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln38', src/real_matmul.cpp:38) [30]  (0.705 ns)
	'select' operation 8 bit ('select_ln36', src/real_matmul.cpp:36) [31]  (0.303 ns)
	'add' operation 8 bit ('add_ln38', src/real_matmul.cpp:38) [57]  (0.705 ns)
	'store' operation 0 bit ('store_ln38', src/real_matmul.cpp:38) of variable 'add_ln38', src/real_matmul.cpp:38 on local variable 'j', src/real_matmul.cpp:38 [60]  (0.387 ns)

 <State 2>: 7.040ns
The critical path consists of the following:
	'getelementptr' operation 128 bit ('mem_addr', src/real_matmul.cpp:36) [26]  (0.000 ns)
	bus read operation ('mem_addr_read', src/real_matmul.cpp:39) on port 'mem' (src/real_matmul.cpp:39) [43]  (7.040 ns)

 <State 3>: 3.052ns
The critical path consists of the following:
	'load' operation 8 bit ('i_load', src/real_matmul.cpp:36) on local variable 'i', src/real_matmul.cpp:36 [25]  (0.000 ns)
	'add' operation 8 bit ('add_ln36', src/real_matmul.cpp:36) [27]  (0.705 ns)
	'select' operation 8 bit ('select_ln36_2', src/real_matmul.cpp:36) [33]  (0.303 ns)
	'shl' operation 2400 bit ('shl_ln39', src/real_matmul.cpp:39) [51]  (0.844 ns)
	'store' operation 0 bit ('store_ln39', src/real_matmul.cpp:39) of constant <constant:_ssdm_op_Write.bram.i2400> on array 'MatB' [56]  (1.200 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
